# Import necessary modules from the tkinter library
from tkinter import *
from tkinter import font
from tkinter import ttk
import string, random
from tkinter import messagebox

# Function to generate a random password based on user preferences
def create():
    x = len.get() # Get the desired password length from the user
    b = a.get() # Get the state of the Capital Letters checkbox
    b1 = a1.get() # Get the state of the Small Letters checkbox
    b2 = a2.get() # Get the state of the Numbers checkbox
    b3 = a3.get() # Get the state of the Symbols checkbox
    
    symbols = ['!','@','#','$','%','^','&','*'] # List of symbols to be used in the password
    pwd = [] # Initialize an empty list to store the password characters
    i=1 # Initialize a counter variable
    if x : # Check if the user has entered a valid password length
        if b==0 and b1==0 and b2==0 and b3==0:
             # Show an error message if no complexity options are selected
            messagebox.showinfo(title="Error", message="oops! Enter the correct values")
        else:
            # Generate the password based on the user's preferences
            while int(x)>=i:
                if b==1 and int(x)>=i:
                    letter = random.choice(string.ascii_uppercase)
                    pwd.append(letter)
                    i=i+1
                if b1==1 and int(x)>=i:
                    sletter = random.choice(string.ascii_lowercase)
                    pwd.append(sletter)
                    i=i+1
                if b2==1 and int(x)>=i:
                    num = random.randint(0, 9)
                    pwd.append(str(num))
                    i=i+1
                if b3==1 and int(x)>=i:
                    sym = random.choice(symbols)
                    pwd.append(sym)
                    i=i+1
            res = ''.join(pwd) # Combine the password characters into a single string

           # Display the generated password in the text entry field
            Label(window, text= "PASSWORD ",fg='hotpink4' ,bg='lavender').place(x=50,y=300)
            password = Entry(window,bg="lavender",fg="black")
            password.place(x=150,y=300)
            password.insert(0,res)
        
    else:
        # Show an error message if no password length is provided
        messagebox.showinfo(title="Error", message="oops! Enter the correct values")
        
     
# Create the main window
window = Tk()

window.title("Password generator")

window.geometry("500x500")

window.configure(bg='lavender')

style= ttk.Style()
style.theme_use('clam')
style.configure("TCombobox", fieldbackground= "lavender", background= "hotpink4")

label_font = font.Font(size=24)

# Create the title label
title = Label(window, text= "Password Generator", font=label_font, fg='hotpink4' ,bg='lavender').place(x=150, y=60)

# Create input fields for password length and complexity preferences
length = Label(window,text="Length of the password",fg='hotpink4' ,bg='lavender').place(x=10, y=120)
len = Entry(window,bg="lavender",fg="black")
len.place(x=220, y=120)
complexicity = Label(window,text="Complexicity of the password",fg='hotpink4' ,bg='lavender').place(x=10, y=150)

# Create variables to store the state of complexity checkboxes
a = IntVar()
a1 = IntVar()
a2 = IntVar()
a3 = IntVar()

# Create checkboxes for complexity options
c = Checkbutton(window, text = "Capital Letters",bg='lavender',fg='hotpink4',variable=a,onvalue = 1, offvalue = 0).place(x=220, y=150)
c1 = Checkbutton(window, text = "Small Letters",bg='lavender',fg='hotpink4',variable=a1,onvalue = 1, offvalue = 0).place(x=220, y=170)
c2 = Checkbutton(window, text = "Numbers",bg='lavender',fg='hotpink4',variable=a2,onvalue = 1, offvalue = 0).place(x=220, y=190)
c3 = Checkbutton(window, text = "Symbols",bg='lavender',fg='hotpink4',variable=a3,onvalue = 1, offvalue = 0).place(x=220, y=210)


# Create a button to generate the password
generate = Button(window, width=10, height=2, text="CREATE",fg ="hotpink4",command=create).place(x=150,y=250)


# Start the tkinter main loop
window.mainloop()
